# Information Request/Response Implementation TODO

## Overview
Implement the complete information request/response workflow between parent and child agents in the HIVE multi-agent system.

## Tasks

### 1. Create send_information tool ✅
- [x] Create `src/actors/tools/send_information.rs`
- [x] Tool should be available only to managers (MainManager and SubManager)
- [x] Takes `agent_id` and `message` parameters
- [x] Sends InterAgentMessage::ManagerMessage to the specified agent
- [x] Format: `<manager_message>MESSAGE</manager_message>`

### 2. Add InterAgentMessage::ManagerMessage
- [ ] Add new variant to InterAgentMessage enum in `src/actors/mod.rs`
- [ ] ManagerMessage should contain the information string
- [ ] The agent_id in AgentMessage should be the recipient agent

### 3. Update AwaitingMoreInformation state
- [ ] Update TaskAwaitingManager::AwaitingMoreInformation in `src/actors/mod.rs`
- [ ] Add `tool_call_id` field (similar to AwaitingPlanApproval)
- [ ] Update all usages of AwaitingMoreInformation to include tool_call_id

### 4. Update Assistant handling for AwaitingMoreInformation
- [ ] In `src/actors/assistant.rs`, replace the `todo!()` at line 284
- [ ] Handle tool response similar to AwaitingPlanApproval:
  - Check if tool_call_id matches
  - Add tool response to chat_request
  - Continue processing

### 5. Update Assistant to handle ManagerMessage
- [ ] Add handling for InterAgentMessage::ManagerMessage
- [ ] Queue as system message: `<manager_message>MESSAGE</manager_message>`
- [ ] Process immediately if in Idle state
- [ ] Otherwise queue for later processing

### 6. Write Assistant state transition tests
- [ ] Add tests in `src/actors/assistant.rs` for:
  - ManagerMessage received while Idle → Processing
  - ManagerMessage received while Processing → queued
  - ManagerMessage received while AwaitingTools → queued
  - ManagerMessage received while Wait → queued

### 7. Write send_information integration test
- [ ] Add test in `tests/tools_integration.rs`
- [ ] Test complete flow: manager creates send_information tool call
- [ ] Verify InterAgentMessage::ManagerMessage is sent
- [ ] Verify recipient agent receives the message

### 8. Update spawn_agent_info_request test
- [ ] Update mock sequences to use send_information tool
- [ ] Update expected message formats
- [ ] Ensure test ends with parent in wait and child in processing state

## Implementation Order
1. InterAgentMessage::ManagerMessage (prerequisite for send_information tool)
2. send_information tool
3. Update AwaitingMoreInformation with tool_call_id
4. Update Assistant handling
5. Write tests
6. Update integration test

## Key Implementation Details

### send_information tool schema
```json
{
  "type": "object",
  "properties": {
    "agent_id": {
      "type": "string",
      "description": "The ID of the agent to send information to"
    },
    "message": {
      "type": "string",
      "description": "The information to send to the agent"
    }
  },
  "required": ["agent_id", "message"]
}
```

### Message Flow
1. Child calls `request_information` tool
2. Child transitions to AwaitingManager(AwaitingMoreInformation { request, tool_call_id })
3. Parent receives request as system message
4. Parent calls `send_information` tool with agent_id and message
5. Child receives ManagerMessage as system message
6. Child's request_information tool completes with the response
7. Child continues processing with the information